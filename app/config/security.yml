# you can read more about security in the related section of the documentation
# http://symfony.com/doc/current/book/security.html
security:
    # http://symfony.com/doc/current/book/security.html#encoding-the-user-s-password
    encoders:
        Symfony\Component\Security\Core\User\User: plaintext

    # http://symfony.com/doc/current/book/security.html#hierarchical-roles
    role_hierarchy:
        ROLE_ADMIN:       ROLE_USER
        ROLE_SUPER_ADMIN: [ROLE_USER, ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH]

    # http://symfony.com/doc/current/book/security.html#where-do-users-come-from-user-providers
    providers:
        in_memory:
            memory:
                users:
                    julie:  { password: julie, roles: [ 'ROLE_USER' ] }
                    admin: { password: admin, roles: [ 'ROLE_ADMIN' ] }

    # the main part of the security, where you can set up firewalls
    # for specific sections of your app
    firewalls:
        # disables authentication for assets and the profiler, adapt it according to your needs
        dev:
            pattern:  ^/(_(profiler|wdt)|css|images|js)/
            security: false
        # the login page has to be accessible for everybody
        demo_login:
            pattern:  ^/demo/secured/login$
            security: false

        # secures part of the application
        demo_secured_area:
            pattern:    ^/demo/secured/
            # it's important to notice that in this case _demo_security_check and _demo_login
            # are route names and that they are specified in the AcmeDemoBundle
            form_login:
                check_path: _demo_security_check
                login_path: _demo_login
            logout:
                path:   _demo_logout
                target: _demo
            #anonymous: ~
            #http_basic:
            #    realm: "Secured Demo Area"
        secured_area:
            pattern: ^/
            anonymous: ~
            form_login:
                 login_path: /login
                 check_path: /login_check
        main:
            form_login:
                # l'utilisateur est redirigé ici quand il/elle a besoin de se connecter
                login_path:                     /login

                # si défini à true, « forward » l'utilisateur vers le formulaire de
                # login au lieu de le rediriger
                use_forward:                    false

                # soumet le formulaire de login vers cette URL
                check_path:                     /login_check

                # par défaut, le formulaire de login *doit* être un POST,
                # et pas un GET
                post_only:                      true

                # options de redirection lorsque le login a réussi (vous
                # pouvez en lire plus ci-dessous)
                always_use_default_target_path: false
                default_target_path:            /
                target_path_parameter:          redirect_url #_target_path
                use_referer:                    false

                # options de redirection lorsque le login échoue (vous
                # pouvez en lire plus ci-dessous)
                failure_path:                   null
                failure_forward:                false

                # noms des champs pour le nom d'utilisateur et le mot
                # de passe
                username_parameter:             _username
                password_parameter:             _password

                # options du token csrf
                csrf_parameter:                 _csrf_token
                intention:                      authenticate

    # with these settings you can restrict or allow access for different parts
    # of your application based on roles, ip, host or methods
    # http://symfony.com/doc/current/book/security.html#security-book-access-control-matching-options
    access_control:
        - { path: ^/admin, roles: ROLE_ADMIN }
        #- { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY, requires_channel: https }